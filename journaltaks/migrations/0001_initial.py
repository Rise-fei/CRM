# -*- coding: utf-8 -*-
# Generated by Django 1.11.10 on 2018-11-08 02:11
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AfterSale',
            fields=[
                ('number', models.AutoField(primary_key=True, serialize=False, verbose_name='编号')),
                ('title', models.CharField(max_length=50, verbose_name='售后标题')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='发布时间')),
            ],
            options={
                'verbose_name_plural': '售后日志',
            },
        ),
        migrations.CreateModel(
            name='Bespeak',
            fields=[
                ('number', models.AutoField(primary_key=True, serialize=False, verbose_name='编号')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='预约时间')),
                ('operator', models.CharField(max_length=32, verbose_name='操作人')),
                ('data_time', models.DateField(verbose_name='操作时间')),
            ],
            options={
                'verbose_name_plural': '预约管理',
            },
        ),
        migrations.CreateModel(
            name='ClassIfy',
            fields=[
                ('nid', models.AutoField(primary_key=True, serialize=False)),
                ('classify', models.CharField(max_length=32)),
            ],
            options={
                'verbose_name_plural': '产品分类',
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('number', models.AutoField(primary_key=True, serialize=False, verbose_name='编号')),
                ('contact_name', models.CharField(max_length=32, verbose_name='姓名')),
                ('sex', models.CharField(max_length=32, verbose_name='性别')),
                ('post', models.CharField(max_length=32, verbose_name='职务')),
                ('contact_phone', models.CharField(max_length=11, verbose_name='手机号')),
                ('email', models.EmailField(max_length=32, verbose_name='邮箱')),
            ],
            options={
                'verbose_name_plural': '联系人',
            },
        ),
        migrations.CreateModel(
            name='Journal',
            fields=[
                ('number', models.AutoField(primary_key=True, serialize=False, verbose_name='编号')),
                ('personal', models.CharField(max_length=32, verbose_name='日志所属人')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='日志日期')),
                ('content', models.TextField(max_length=500, verbose_name='日志内容')),
            ],
            options={
                'verbose_name_plural': '日志管理',
            },
        ),
        migrations.CreateModel(
            name='JournalLevel',
            fields=[
                ('nid', models.AutoField(primary_key=True, serialize=False)),
                ('jou_level', models.CharField(max_length=32, verbose_name='日志等级')),
            ],
            options={
                'verbose_name_plural': '日志等级',
            },
        ),
        migrations.CreateModel(
            name='Level',
            fields=[
                ('nid', models.AutoField(primary_key=True, serialize=False)),
                ('level', models.CharField(max_length=32)),
            ],
            options={
                'verbose_name_plural': '等级表',
            },
        ),
        migrations.CreateModel(
            name='Organ',
            fields=[
                ('number', models.AutoField(primary_key=True, serialize=False, verbose_name='编号')),
                ('name', models.CharField(max_length=32, verbose_name='机构名称')),
                ('address', models.CharField(max_length=50, verbose_name='机构地址')),
                ('organ_type', models.CharField(max_length=32, verbose_name='机构类型')),
                ('phone', models.CharField(max_length=11, verbose_name='手机号')),
                ('website', models.CharField(max_length=50, verbose_name='网站')),
                ('level', models.CharField(max_length=32, verbose_name='重要级别')),
                ('grade', models.CharField(max_length=32, verbose_name='单位等级')),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='journaltaks.Contact')),
            ],
            options={
                'verbose_name_plural': '机构表',
            },
        ),
        migrations.CreateModel(
            name='ReservationState',
            fields=[
                ('nid', models.AutoField(primary_key=True, serialize=False)),
                ('res_state', models.CharField(max_length=32, verbose_name='预约状态')),
            ],
            options={
                'verbose_name_plural': '预约状态',
            },
        ),
        migrations.CreateModel(
            name='SaleType',
            fields=[
                ('nid', models.AutoField(primary_key=True, serialize=False)),
                ('sale_type', models.CharField(max_length=32, verbose_name='售后类型')),
            ],
            options={
                'verbose_name_plural': '售后类型',
            },
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('nid', models.AutoField(primary_key=True, serialize=False)),
                ('state', models.CharField(max_length=32, verbose_name='处理状态')),
            ],
            options={
                'verbose_name_plural': '处理状态',
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('number', models.AutoField(primary_key=True, serialize=False, verbose_name='编号')),
                ('Task_person', models.CharField(max_length=32, verbose_name='任务人员')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='发布时间')),
                ('date_time', models.DateTimeField(auto_now_add=True, verbose_name='操作时间')),
                ('classify', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='journaltaks.ClassIfy')),
                ('level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='journaltaks.Level')),
            ],
            options={
                'verbose_name_plural': '任务清单',
            },
        ),
        migrations.CreateModel(
            name='TaskOrgan',
            fields=[
                ('nid', models.AutoField(primary_key=True, serialize=False)),
                ('organ_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='journaltaks.Organ')),
                ('task_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='journaltaks.Task')),
            ],
            options={
                'verbose_name_plural': '任务--机构',
            },
        ),
        migrations.AddField(
            model_name='task',
            name='organ',
            field=models.ManyToManyField(through='journaltaks.TaskOrgan', to='journaltaks.Organ'),
        ),
        migrations.AddField(
            model_name='journal',
            name='jou_level',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='journaltaks.JournalLevel'),
        ),
        migrations.AddField(
            model_name='journal',
            name='organ',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='journaltaks.Organ'),
        ),
        migrations.AddField(
            model_name='bespeak',
            name='organ',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='journaltaks.Organ'),
        ),
        migrations.AddField(
            model_name='bespeak',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='journaltaks.ReservationState'),
        ),
        migrations.AddField(
            model_name='aftersale',
            name='contact_name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='journaltaks.Contact'),
        ),
        migrations.AddField(
            model_name='aftersale',
            name='organ',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='journaltaks.Organ'),
        ),
        migrations.AddField(
            model_name='aftersale',
            name='sale_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='journaltaks.SaleType'),
        ),
        migrations.AddField(
            model_name='aftersale',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='journaltaks.State'),
        ),
    ]
